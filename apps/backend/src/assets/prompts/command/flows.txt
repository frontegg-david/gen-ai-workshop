# Add a new user if not exists

1. Go to the page with URL: "/"
2. Wait for 1000 milliseconds
3. Focus on element with data-testid: "nav_users_page"
4. Click on element with data-testid: "nav_users_page"
5. Focus on element with data-testid: "add_user_button"
6. Click on element with data-testid: "add_user_button"
7. Focus on element with data-testid: "full_name"
8. Fill element with data-testid: "full_name" with value: "Marshall Cummerata"
9. Focus on element with data-testid: "email"
10. Fill element with data-testid: "email" with value: "MarshallCummerata.Connelly@gmail.com"
11. Focus on element with data-testid: "submit_button"
12. Click on element with data-testid: "submit_button"
13. Focus on element with data-testid: "users_table"

Note: If the user with the provided email already exists, an error will be thrown.

## Flow
Action Flow:

1. Import necessary modules and functions.

2. Define a test case named "Add a new user if not exists" that accepts a parameter "page".

3. Generate a random full name using the faker.person.fullName() method and save it to the 'fullName' variable.

4. Generate a random email address using the faker.internet.email() method and pass the 'fullName' as the 'firstName' parameter. Save the result to the 'email' variable.

5. Call the 'isUserExists' function and pass the 'email' as an argument. Save the result to the 'userExists' variable.

6. Check if 'userExists' is true.

7. If 'userExists' is true, throw an error message indicating that the user already exists with the given email.

8. If 'userExists' is false, execute the following steps:

  9. Navigate to the root page ("/") using the 'page.goto()' method.

  10. Wait for a timeout of 1000 milliseconds using the 'page.waitForTimeout()' method.

  11. Focus on the element with the test ID "nav_users_page" using the 'page.getByTestId().focus()' method.

  12. Click on the element with the test ID "nav_users_page" using the 'page.getByTestId().click()' method.

  13. Focus on the element with the test ID "add_user_button" using the 'page.getByTestId().focus()' method.

  14. Click on the element with the test ID "add_user_button" using the 'page.getByTestId().click()' method.

  15. Focus on the element with the test ID "full_name" using the 'page.getByTestId().focus()' method.

  16. Fill the input field with the random 'fullName' using the 'page.getByTestId().fill()' method.

  17. Focus on the element with the test ID "email" using the 'page.getByTestId().focus()' method.

  18. Fill the input field with the random 'email' using the 'page.getByTestId().fill()' method.

  19. Focus on the element with the test ID "submit_button" using the 'page.getByTestId().focus()' method.

  20. Click on the element with the test ID "submit_button" using the 'page.getByTestId().click()' method.

  21. Focus on the element with the test ID "users_table" using the 'page.getByTestId().focus()' method.

## Code
import { test } from '@playwright/test';
import { faker } from '@faker-js/faker';
import { isUserExists } from './helpers'

test('Add a new user if not exists', async ({ page }) => {

  const fullName = faker.person.fullName()
  const email = faker.internet.email({ firstName: fullName })
  const userExists = await isUserExists(email)
  if (userExists) {
    throw new Error(`user already ${email} exists`)
  } else {
    await page.goto('/');
    await page.waitForTimeout(1000);

    await page.getByTestId('nav_users_page').focus()
    await page.getByTestId('nav_users_page').click()

    await page.getByTestId('add_user_button').focus()
    await page.getByTestId('add_user_button').click()

    await page.getByTestId('full_name').focus()
    await page.getByTestId('full_name').fill(fullName)

    await page.getByTestId('email').focus()
    await page.getByTestId('email').fill(email)

    await page.getByTestId('submit_button').focus()
    await page.getByTestId('submit_button').click()

    await page.getByTestId('users_table').focus()
  }
})


